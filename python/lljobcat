#!/usr/bin/env python3

from loadleveller import jobstatus, jobfile
import argparse
import subprocess
import json

parser = argparse.ArgumentParser(description='Concatenate job results and merge them if needed')
parser.add_argument('jobfiles', nargs='+', help='jobs to concatenate')
parser.add_argument('-o', '--output', required=True, help='output file for the concatenated result.')
parser.add_argument('-n', '--no-merge', action='store_true', help='skip the merging step')
args = parser.parse_args()

tasks = []
for jobname in args.jobfiles:
    try:
        j = jobfile.JobFile(jobname)
        if not args.no_merge:
            if jobstatus.job_need_merge(j):
                subprocess.run(['loadl', 'm', jobname])

        with open(j.jobname+'.results.json', 'r') as infile:
            res = json.load(infile)
            tasks += res

    except FileNotFoundError:
        print('File not found for "{}". Skipping...'.format(jobname))
with open(args.output, 'w') as outfile:
    json.dump(tasks, outfile, indent=0)

print('{} -> {}'.format(' '.join(args.jobfiles), args.output))
            
